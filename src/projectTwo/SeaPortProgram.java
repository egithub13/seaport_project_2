/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectTwo;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.lang.reflect.Method;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author erich
 */
public class SeaPortProgram extends javax.swing.JFrame {

    private JFileChooser chooser;
    private Scanner scannerInput;
    private World world;

    /**
     * Creates new form SeaPortProgram
     */
    public SeaPortProgram() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    /**
	 * Displays results of queries using the search field and button
	 * 
	 * @param results
	 * @param args
	 */
	private void displayResults(String results, String args) {
		if (results.equals("")) {
			JOptionPane.showMessageDialog(null, args + " Not Found", "Warning", JOptionPane.WARNING_MESSAGE);
		} else {
			JOptionPane.showMessageDialog(null, results, "Search Results for " + args, JOptionPane.INFORMATION_MESSAGE);
		}
	}

	/**
	 *
	 * @param comboBoxSelection
	 * @param searchInput
	 * @return String
	 */

	private String arrangeResults(int comboBoxSelection, String searchInput) {
		// TODO Auto-generated method stub
		Method getMethodUsed;
		String param;
		String method;
		String results = "";

		// Using ternary operator to resolve name or index
		method = (comboBoxSelection == 0) ? "getName" : "getIndex";

		try {
			// getName or getIndex
			getMethodUsed = Thing.class.getDeclaredMethod(method);
			for (Thing thing : this.world.getThings()) {
				// used to ignoreCase Integer to string
				param = "" + getMethodUsed.invoke(thing);

				if (param.equals(searchInput)) {
					results += thing.getName() + " " + thing.getIndex() + "\n";
				}
			}
		} catch (Exception e) {
			System.out.println(e);
		}

		return results;
	}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        actionPanel = new javax.swing.JPanel();
        btnRead = new javax.swing.JButton();
        txtFieldSearch = new javax.swing.JTextField();
        comboBox = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        lblSort = new javax.swing.JLabel();
        comboBoxSortPorts = new javax.swing.JComboBox<>();
        comboBoxSortAll = new javax.swing.JComboBox<>();
        comboBoxShipType = new javax.swing.JComboBox<>();
        btnSort = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sea Port Program");
        setMinimumSize(new java.awt.Dimension(900, 475));
        setPreferredSize(new java.awt.Dimension(900, 475));
        setResizable(false);

        mainPanel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        mainPanel.setMinimumSize(new java.awt.Dimension(875, 575));
        mainPanel.setPreferredSize(new java.awt.Dimension(875, 475));
        mainPanel.setLayout(new java.awt.BorderLayout(10, 10));

        actionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actions", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        actionPanel.setMaximumSize(new java.awt.Dimension(875, 28));
        actionPanel.setMinimumSize(new java.awt.Dimension(875, 28));

        btnRead.setBackground(new java.awt.Color(0, 0, 204));
        btnRead.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRead.setForeground(java.awt.Color.white);
        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        txtFieldSearch.setToolTipText("Name, Job or Index");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Name", "By Index", "By Skill", " " }));

        btnSearch.setBackground(java.awt.Color.magenta);
        btnSearch.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSearch.setForeground(java.awt.Color.white);
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblSearch.setText("Search:");

        lblSort.setText("Sort By:");

        comboBoxSortPorts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ports" }));

        comboBoxSortAll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ships", "Docks", "Persons", "Jobs" }));

        comboBoxShipType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name" }));

        btnSort.setBackground(new java.awt.Color(0, 153, 0));
        btnSort.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSort.setForeground(java.awt.Color.white);
        btnSort.setText("Sort");

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxSortPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxSortAll, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBoxShipType, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSort, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSearch)
                        .addComponent(btnRead))
                    .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxShipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSort)
                        .addComponent(comboBoxSortAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxSortPorts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSort)
                        .addComponent(btnSearch))))
        );

        mainPanel.add(actionPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.setAutoscrolls(true);
        jPanel1.setMaximumSize(null);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))), "World:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        mainTextArea.setEditable(false);
        mainTextArea.setColumns(20);
        mainTextArea.setRows(5);
        mainTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(mainTextArea);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Sort/Search Results:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        jScrollPane1.getAccessibleContext().setAccessibleName("");

        mainPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        int file;
		FileReader fileReader;

		// Create file chooser object
		this.chooser = new JFileChooser(".");
		// Create new Window for file chooser
		file = this.chooser.showOpenDialog(new JFrame());

		if (file == JFileChooser.APPROVE_OPTION) {
			try {
				fileReader = new FileReader(this.chooser.getSelectedFile());
				this.scannerInput = new Scanner(fileReader);
			} catch (FileNotFoundException e) {
				JOptionPane.showMessageDialog(new JFrame(),"No File Found");
			}
		}

		// Create the World!
		this.world = new World(scannerInput);
		// display the World!
		this.mainTextArea.setText(this.world.toString());
		// System.out.println(world);
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Check for empty world
		if (this.world == null || this.scannerInput == null) {
			JOptionPane.showMessageDialog(new JFrame(), "Search results not found");
			return;
		}

		// Assign search results
		String results = "";
		String searchInput = ignoreCase(this.txtFieldSearch.getText().trim());//Ignores the case of search input
		int comboBoxSelection = this.comboBox.getSelectedIndex();

		// Additional user error handling for null jtextfiled input
		if (searchInput.equals("")) {
			JOptionPane.showMessageDialog(new JFrame(), "No search tems found");
			return;
		}

		// Options for JComboxBox items
		switch (comboBoxSelection) {

		case 0: // name
			results = this.arrangeResults(comboBoxSelection, searchInput);
			this.displayResults(results, searchInput);
			break;
		case 1: // Index
			results = this.arrangeResults(comboBoxSelection, searchInput);
			this.displayResults(results, searchInput);
			break;
		case 2:
			for (SeaPort seaPort : this.world.getSeaPorts()) {
				for (Person person : seaPort.getPersons()) {
					if (person.getSkill().equals(searchInput)) {
						results += person.getName() + " is a " + person.getSkill() + "\n";
					}
				}
			}
			this.displayResults(results, searchInput);
			break;
		default:
			break;
		}
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * Method to ignore case of search input
     * @param str
     * @return String
     */
    static String ignoreCase(String str) 
    { 
        String convertString = "";
        // Create a char array of given String 
        char ch[] = str.toCharArray(); 
        for (int i = 0; i < str.length(); i++) { 
  
            // If first character of a word is found 
            if (i == 0 && ch[i] != ' ' ||  
                ch[i] != ' ' && ch[i - 1] == ' ') { 
  
                // If it is in lower-case 
                if (ch[i] >= 'a' && ch[i] <= 'z') { 
  
                    // Convert into Upper-case 
                    ch[i] = (char)(ch[i] - 'a' + 'A'); 
                    convertString = new String(ch);
                    return convertString;
                } 
            }          
        } 
        return str;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeaPortProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeaPortProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeaPortProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeaPortProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeaPortProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSort;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JComboBox<String> comboBoxShipType;
    private javax.swing.JComboBox<String> comboBoxSortAll;
    private javax.swing.JComboBox<String> comboBoxSortPorts;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSort;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextArea mainTextArea;
    private javax.swing.JTextField txtFieldSearch;
    // End of variables declaration//GEN-END:variables
}
